.TH "src/ckb-mviz/_kiss_fft_guts.h" 3 "Tue May 16 2017" "Version beta-v0.2.7 at branch all-mine" "ckb-next" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/ckb-mviz/_kiss_fft_guts.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include 'kiss_fft\&.h'\fP
.br
\fC#include <limits\&.h>\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBkiss_fft_state\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBMAXFACTORS\fP   32"
.br
.ti -1c
.RI "#define \fBS_MUL\fP(a, b)   ( (a)*(b) )"
.br
.ti -1c
.RI "#define \fBC_MUL\fP(m, a, b)"
.br
.ti -1c
.RI "#define \fBC_FIXDIV\fP(c, div)   /* NOOP */"
.br
.ti -1c
.RI "#define \fBC_MULBYSCALAR\fP(c, s)"
.br
.ti -1c
.RI "#define \fBCHECK_OVERFLOW_OP\fP(a, op, b)   /* noop */"
.br
.ti -1c
.RI "#define \fBC_ADD\fP(res, a, b)"
.br
.ti -1c
.RI "#define \fBC_SUB\fP(res, a, b)"
.br
.ti -1c
.RI "#define \fBC_ADDTO\fP(res, a)"
.br
.ti -1c
.RI "#define \fBC_SUBFROM\fP(res, a)"
.br
.ti -1c
.RI "#define \fBKISS_FFT_COS\fP(\fBphase\fP)   (\fBkiss_fft_scalar\fP) cos(\fBphase\fP)"
.br
.ti -1c
.RI "#define \fBKISS_FFT_SIN\fP(\fBphase\fP)   (\fBkiss_fft_scalar\fP) sin(\fBphase\fP)"
.br
.ti -1c
.RI "#define \fBHALF_OF\fP(\fBx\fP)   ((\fBx\fP)*\&.5)"
.br
.ti -1c
.RI "#define \fBkf_cexp\fP(\fBx\fP, \fBphase\fP)"
.br
.ti -1c
.RI "#define \fBpcpx\fP(c)   fprintf(stderr,'%g + %gi\\n',(double)((c)->r),(double)((c)->i) )"
.br
.ti -1c
.RI "#define \fBKISS_FFT_TMP_ALLOC\fP(nbytes)   \fBKISS_FFT_MALLOC\fP(nbytes)"
.br
.ti -1c
.RI "#define \fBKISS_FFT_TMP_FREE\fP(ptr)   \fBKISS_FFT_FREE\fP(ptr)"
.br
.in -1c
.SH "Data Structure Documentation"
.PP 
.SH "struct kiss_fft_state"
.PP 
Definition at line 28 of file _kiss_fft_guts\&.h\&.
.PP
\fBData Fields:\fP
.RS 4
int \fIfactors[2 *32]\fP 
.br
.PP
int \fIinverse\fP 
.br
.PP
int \fInfft\fP 
.br
.PP
\fBkiss_fft_cpx\fP \fItwiddles[1]\fP 
.br
.PP
.RE
.PP
.SH "Macro Definition Documentation"
.PP 
.SS "#define C_ADD(res, a, b)"
\fBValue:\fP
.PP
.nf
do { \\
	    CHECK_OVERFLOW_OP((a)\&.r,+,(b)\&.r)\\
	    CHECK_OVERFLOW_OP((a)\&.i,+,(b)\&.i)\
        (res)\&.r=(a)\&.r+(b)\&.r;  (res)\&.i=(a)\&.i+(b)\&.i; \
    }while(0)
.fi
.PP
Definition at line 100 of file _kiss_fft_guts\&.h\&.
.PP
Referenced by kf_bfly3(), kf_bfly4(), kf_bfly5(), kiss_fftr(), and kiss_fftri()\&.
.SS "#define C_ADDTO(res, a)"
\fBValue:\fP
.PP
.nf
do { \\
	    CHECK_OVERFLOW_OP((res)\&.r,+,(a)\&.r)\\
	    CHECK_OVERFLOW_OP((res)\&.i,+,(a)\&.i)\
        (res)\&.r += (a)\&.r;  (res)\&.i += (a)\&.i;\
    }while(0)
.fi
.PP
Definition at line 112 of file _kiss_fft_guts\&.h\&.
.PP
Referenced by kf_bfly2(), kf_bfly3(), kf_bfly4(), and kf_bfly_generic()\&.
.SS "#define C_FIXDIV(c, div)   /* NOOP */"

.PP
Definition at line 90 of file _kiss_fft_guts\&.h\&.
.PP
Referenced by kf_bfly2(), kf_bfly3(), kf_bfly4(), kf_bfly5(), kf_bfly_generic(), kiss_fftr(), and kiss_fftri()\&.
.SS "#define C_MUL(m, a, b)"
\fBValue:\fP
.PP
.nf
do{ (m)\&.r = (a)\&.r*(b)\&.r - (a)\&.i*(b)\&.i;\
        (m)\&.i = (a)\&.r*(b)\&.i + (a)\&.i*(b)\&.r; }while(0)
.fi
.PP
Definition at line 87 of file _kiss_fft_guts\&.h\&.
.PP
Referenced by kf_bfly2(), kf_bfly3(), kf_bfly4(), kf_bfly5(), kf_bfly_generic(), kiss_fftr(), and kiss_fftri()\&.
.SS "#define C_MULBYSCALAR(c, s)"
\fBValue:\fP
.PP
.nf
do{ (c)\&.r *= (s);\
        (c)\&.i *= (s); }while(0)
.fi
.PP
Definition at line 91 of file _kiss_fft_guts\&.h\&.
.PP
Referenced by kf_bfly3()\&.
.SS "#define C_SUB(res, a, b)"
\fBValue:\fP
.PP
.nf
do { \\
	    CHECK_OVERFLOW_OP((a)\&.r,-,(b)\&.r)\\
	    CHECK_OVERFLOW_OP((a)\&.i,-,(b)\&.i)\
        (res)\&.r=(a)\&.r-(b)\&.r;  (res)\&.i=(a)\&.i-(b)\&.i; \
    }while(0)
.fi
.PP
Definition at line 106 of file _kiss_fft_guts\&.h\&.
.PP
Referenced by kf_bfly2(), kf_bfly3(), kf_bfly4(), kf_bfly5(), kiss_fftr(), and kiss_fftri()\&.
.SS "#define C_SUBFROM(res, a)"
\fBValue:\fP
.PP
.nf
do {\\
	    CHECK_OVERFLOW_OP((res)\&.r,-,(a)\&.r)\\
	    CHECK_OVERFLOW_OP((res)\&.i,-,(a)\&.i)\
        (res)\&.r -= (a)\&.r;  (res)\&.i -= (a)\&.i; \
    }while(0)
.fi
.PP
Definition at line 119 of file _kiss_fft_guts\&.h\&.
.SS "#define CHECK_OVERFLOW_OP(a, op, b)   /* noop */"

.PP
Definition at line 97 of file _kiss_fft_guts\&.h\&.
.PP
Referenced by kiss_fftr()\&.
.SS "#define HALF_OF(\fBx\fP)   ((\fBx\fP)*\&.5)"

.PP
Definition at line 138 of file _kiss_fft_guts\&.h\&.
.PP
Referenced by kf_bfly3(), and kiss_fftr()\&.
.SS "#define kf_cexp(\fBx\fP, \fBphase\fP)"
\fBValue:\fP
.PP
.nf
do{ \
        (x)->r = KISS_FFT_COS(phase);\
        (x)->i = KISS_FFT_SIN(phase);\
    }while(0)
.fi
.PP
Definition at line 141 of file _kiss_fft_guts\&.h\&.
.PP
Referenced by kiss_fft_alloc(), and kiss_fftr_alloc()\&.
.SS "#define KISS_FFT_COS(\fBphase\fP)   (\fBkiss_fft_scalar\fP) cos(\fBphase\fP)"

.PP
Definition at line 136 of file _kiss_fft_guts\&.h\&.
.SS "#define KISS_FFT_SIN(\fBphase\fP)   (\fBkiss_fft_scalar\fP) sin(\fBphase\fP)"

.PP
Definition at line 137 of file _kiss_fft_guts\&.h\&.
.SS "#define KISS_FFT_TMP_ALLOC(nbytes)   \fBKISS_FFT_MALLOC\fP(nbytes)"

.PP
Definition at line 162 of file _kiss_fft_guts\&.h\&.
.PP
Referenced by kf_bfly_generic(), and kiss_fft_stride()\&.
.SS "#define KISS_FFT_TMP_FREE(ptr)   \fBKISS_FFT_FREE\fP(ptr)"

.PP
Definition at line 163 of file _kiss_fft_guts\&.h\&.
.PP
Referenced by kf_bfly_generic(), and kiss_fft_stride()\&.
.SS "#define MAXFACTORS   32"

.PP
Definition at line 22 of file _kiss_fft_guts\&.h\&.
.SS "#define pcpx(c)   fprintf(stderr,'%g + %gi\\n',(double)((c)->r),(double)((c)->i) )"

.PP
Definition at line 149 of file _kiss_fft_guts\&.h\&.
.SS "#define S_MUL(a, b)   ( (a)*(b) )"

.PP
Definition at line 86 of file _kiss_fft_guts\&.h\&.
.PP
Referenced by kf_bfly5()\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for ckb-next from the source code\&.
