.TH "src/ckb/fwupgradedialog.cpp" 3 "Tue May 16 2017" "Version beta-v0.2.7 at branch all-mine" "ckb-next" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/ckb/fwupgradedialog.cpp \- 
.SH SYNOPSIS
.br
.PP
\fC#include <QDir>\fP
.br
\fC#include <QMessageBox>\fP
.br
\fC#include 'fwupgradedialog\&.h'\fP
.br
\fC#include 'kbfirmware\&.h'\fP
.br
\fC#include 'ui_fwupgradedialog\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBKbId\fP"
.br
.RI "\fIIDs for verifying firmware suitability Some newer hardware models have the same features as older ones, but need a different firmware version number but not a different firmware file\&. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "static const int \fBDIALOG_HEIGHT_MAX\fP (240)"
.br
.ti -1c
.RI "static float \fBverifyFw\fP (const QByteArray &blob, const QString &features)"
.br
.in -1c
.SS "Variables"

.in +1c
.ti -1c
.RI "static \fBKbId\fP \fBids\fP []"
.br
.ti -1c
.RI "static const int \fBDIALOG_WIDTH\fP = 420"
.br
.ti -1c
.RI "static const int \fBDIALOG_HEIGHT_MIN\fP = 200"
.br
.in -1c
.SH "Data Structure Documentation"
.PP 
.SH "struct KbId"
.PP 
Definition at line 10 of file fwupgradedialog\&.cpp\&.
.PP
\fBData Fields:\fP
.RS 4
const char * \fIfeature\fP 
.br
.PP
short \fIproduct\fP 
.br
.PP
short \fIvendor\fP 
.br
.PP
.RE
.PP
.SH "Function Documentation"
.PP 
.SS "static const int DIALOG_HEIGHT_MAX (240)\fC [static]\fP"

.PP
Referenced by FwUpgradeDialog::exec()\&.
.SS "static float verifyFw (const QByteArray &blob, const QString &features)\fC [static]\fP"

.PP
Definition at line 87 of file fwupgradedialog\&.cpp\&.
.PP
References ids\&.
.PP
Referenced by FwUpgradeDialog::exec()\&.
.PP
.nf
87                                                                       {
88     if(blob\&.length() < 0x0108)
89         return 0\&.f;
90     const char* bData = blob\&.data();
91     // Make sure it matches this device based on the vendor and product IDs embedded in the blob
92     bool match = false;
93     for(uint i = 0; i < sizeof(ids)/sizeof(KbId); i++){
94         if(!memcmp(&ids[i]\&.vendor, bData + 0x102, 2) && !memcmp(&ids[i]\&.product, bData + 0x104, 2)
95                 && features\&.startsWith(ids[i]\&.feature, Qt::CaseInsensitive)){
96             match = true;
97             break;
98         }
99     }
100     if(!match)
101         return 0\&.f;
102     // Copy the version from the blob
103     short version;
104     memcpy(&version, bData + 0x106, 2);
105     // Un-hexify it
106     return QString::number(version, 16)\&.toFloat() / 100\&.f;
107 }
.fi
.SH "Variable Documentation"
.PP 
.SS "const int DIALOG_HEIGHT_MIN = 200\fC [static]\fP"

.PP
Definition at line 31 of file fwupgradedialog\&.cpp\&.
.PP
Referenced by FwUpgradeDialog::FwUpgradeDialog(), and FwUpgradeDialog::on_actionButton_clicked()\&.
.SS "const int DIALOG_WIDTH = 420\fC [static]\fP"

.PP
Definition at line 30 of file fwupgradedialog\&.cpp\&.
.PP
Referenced by FwUpgradeDialog::exec(), FwUpgradeDialog::FwUpgradeDialog(), and FwUpgradeDialog::on_actionButton_clicked()\&.
.SS "\fBKbId\fP ids[]\fC [static]\fP"
\fBInitial value:\fP
.PP
.nf
= {
    
    { 0x1b1c, 0x1b17, "corsair k65 rgb"},
    { 0x1b1c, 0x1b13, "corsair k70 rgb"},
    { 0x1b1c, 0x1b11, "corsair k95 rgb"},
    { 0x1b1c, 0x1b15, "corsair strafe monochrome"},
    { 0x1b1c, 0x1b20, "corsair strafe rgb"},
    
    { 0x1b1c, 0x1b12, "corsair m65 rgb"},
    { 0x1b1c, 0x1b1e, "corsair scimitar rgb"},
    
    { 0x1b1c, 0x1b32, "corsair sabre optical rgb"}
}
.fi
.PP
Definition at line 16 of file fwupgradedialog\&.cpp\&.
.PP
Referenced by verifyFw()\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for ckb-next from the source code\&.
