.TH "QuaChecksum32" 3 "Sun Jun 4 2017" "Version beta-v0.2.8+testing at branch all-mine" "ckb-next" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QuaChecksum32 \- 
.PP
Checksum interface\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <quazip/quachecksum32\&.h>\fP
.PP
Inherited by \fBQuaAdler32\fP, and \fBQuaCrc32\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "virtual quint32 \fBcalculate\fP (const QByteArray &data)=0"
.br
.RI "\fICalculates the checksum for data\&. \fP"
.ti -1c
.RI "virtual void \fBreset\fP ()=0"
.br
.RI "\fIResets the calculation on a checksun for a stream\&. \fP"
.ti -1c
.RI "virtual void \fBupdate\fP (const QByteArray &buf)=0"
.br
.RI "\fIUpdates the calculated checksum for the stream\&. \fP"
.ti -1c
.RI "virtual quint32 \fBvalue\fP ()=0"
.br
.RI "\fIValue of the checksum calculated for the stream passed throw \fBupdate()\fP\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
This is an interface for 32 bit checksums\&. Classes implementing this interface can calcunate a certin checksum in a single step: 
.PP
.nf
QChecksum32 *crc32 = new QuaCrc32(); 
rasoult = crc32->calculate(data);

.fi
.PP
 or by streaming the data: 
.PP
.nf
QChecksum32 *crc32 = new QuaCrc32(); 
while(!fileA\&.atEnd())
    crc32->update(fileA\&.read(bufSize));
resoultA = crc32->value();
crc32->reset();
while(!fileB\&.atEnd())
    crc32->update(fileB\&.read(bufSize));
resoultB = crc32->value();

.fi
.PP
 
.PP
Definition at line 52 of file quachecksum32\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "virtual quint32 QuaChecksum32::calculate (const QByteArray &data)\fC [pure virtual]\fP"
\fIdata\fP source data 
.PP
\fBReturns:\fP
.RS 4
data checksum
.RE
.PP
This function has no efect on the value returned by \fBvalue()\fP\&. 
.PP
Implemented in \fBQuaAdler32\fP, and \fBQuaCrc32\fP\&.
.SS "virtual void QuaChecksum32::reset ()\fC [pure virtual]\fP"

.PP
Implemented in \fBQuaAdler32\fP, and \fBQuaCrc32\fP\&.
.SS "virtual void QuaChecksum32::update (const QByteArray &buf)\fC [pure virtual]\fP"
\fIbuf\fP next portion of data from the stream 
.PP
Implemented in \fBQuaAdler32\fP, and \fBQuaCrc32\fP\&.
.SS "virtual quint32 QuaChecksum32::value ()\fC [pure virtual]\fP"

.PP
\fBReturns:\fP
.RS 4
checksum 
.RE
.PP

.PP
Implemented in \fBQuaAdler32\fP, and \fBQuaCrc32\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for ckb-next from the source code\&.
