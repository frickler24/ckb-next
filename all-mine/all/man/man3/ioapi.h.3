.TH "src/ckb/quazip/ioapi.h" 3 "Sat May 27 2017" "Version v0.2.8 at branch all-mine" "ckb-next" \" -*- nroff -*-
.ad l
.nh
.SH NAME
src/ckb/quazip/ioapi.h \- 
.SH SYNOPSIS
.br
.PP
\fC#include <stdio\&.h>\fP
.br
\fC#include <stdlib\&.h>\fP
.br
\fC#include 'zlib\&.h'\fP
.br

.SS "Data Structures"

.in +1c
.ti -1c
.RI "struct \fBzlib_filefunc_def_s\fP"
.br
.ti -1c
.RI "struct \fBzlib_filefunc64_def_s\fP"
.br
.ti -1c
.RI "struct \fBzlib_filefunc64_32_def_s\fP"
.br
.in -1c
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fB__USE_FILE_OFFSET64\fP"
.br
.ti -1c
.RI "#define \fB__USE_LARGEFILE64\fP"
.br
.ti -1c
.RI "#define \fB_LARGEFILE64_SOURCE\fP"
.br
.ti -1c
.RI "#define \fB_FILE_OFFSET_BIT\fP   64"
.br
.ti -1c
.RI "#define \fBOF\fP   \fB_Z_OF\fP"
.br
.ti -1c
.RI "#define \fBZLIB_FILEFUNC_SEEK_CUR\fP   (1)"
.br
.ti -1c
.RI "#define \fBZLIB_FILEFUNC_SEEK_END\fP   (2)"
.br
.ti -1c
.RI "#define \fBZLIB_FILEFUNC_SEEK_SET\fP   (0)"
.br
.ti -1c
.RI "#define \fBZLIB_FILEFUNC_MODE_READ\fP   (1)"
.br
.ti -1c
.RI "#define \fBZLIB_FILEFUNC_MODE_WRITE\fP   (2)"
.br
.ti -1c
.RI "#define \fBZLIB_FILEFUNC_MODE_READWRITEFILTER\fP   (3)"
.br
.ti -1c
.RI "#define \fBZLIB_FILEFUNC_MODE_EXISTING\fP   (4)"
.br
.ti -1c
.RI "#define \fBZLIB_FILEFUNC_MODE_CREATE\fP   (8)"
.br
.ti -1c
.RI "#define \fBZCALLBACK\fP"
.br
.ti -1c
.RI "#define \fBZREAD64\fP(filefunc, filestream, buf, size)   ((*((filefunc)\&.zfile_func64\&.zread_file))   ((filefunc)\&.zfile_func64\&.opaque,filestream,buf,size))"
.br
.ti -1c
.RI "#define \fBZWRITE64\fP(filefunc, filestream, buf, size)   ((*((filefunc)\&.zfile_func64\&.zwrite_file))  ((filefunc)\&.zfile_func64\&.opaque,filestream,buf,size))"
.br
.ti -1c
.RI "#define \fBZCLOSE64\fP(filefunc, filestream)   ((*((filefunc)\&.zfile_func64\&.zclose_file))  ((filefunc)\&.zfile_func64\&.opaque,filestream))"
.br
.ti -1c
.RI "#define \fBZFAKECLOSE64\fP(filefunc, filestream)   ((*((filefunc)\&.zfile_func64\&.zfakeclose_file))  ((filefunc)\&.zfile_func64\&.opaque,filestream))"
.br
.ti -1c
.RI "#define \fBZERROR64\fP(filefunc, filestream)   ((*((filefunc)\&.zfile_func64\&.zerror_file))  ((filefunc)\&.zfile_func64\&.opaque,filestream))"
.br
.ti -1c
.RI "#define \fBZOPEN64\fP(filefunc, filename, mode)   (\fBcall_zopen64\fP((&(filefunc)),(filename),(mode)))"
.br
.ti -1c
.RI "#define \fBZTELL64\fP(filefunc, filestream)   (\fBcall_ztell64\fP((&(filefunc)),(filestream)))"
.br
.ti -1c
.RI "#define \fBZSEEK64\fP(filefunc, filestream, pos, mode)   (\fBcall_zseek64\fP((&(filefunc)),(filestream),(pos),(mode)))"
.br
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef unsigned long long int \fBZPOS64_T\fP"
.br
.ti -1c
.RI "typedef voidpf open_file_func \fB_Z_OF\fP ((voidpf opaque, voidpf file, int mode))"
.br
.RI "\fIAddition for GDAL : START\&. \fP"
.ti -1c
.RI "typedef struct \fBzlib_filefunc_def_s\fP \fBzlib_filefunc_def\fP"
.br
.ti -1c
.RI "typedef struct 
.br
\fBzlib_filefunc64_def_s\fP \fBzlib_filefunc64_def\fP"
.br
.ti -1c
.RI "typedef struct 
.br
\fBzlib_filefunc64_32_def_s\fP \fBzlib_filefunc64_32_def\fP"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBfill_qiodevice64_filefunc\fP \fB_Z_OF\fP ((\fBzlib_filefunc64_def\fP *pzlib_filefunc_def))"
.br
.ti -1c
.RI "void \fBfill_qiodevice_filefunc\fP \fB_Z_OF\fP ((\fBzlib_filefunc_def\fP *pzlib_filefunc_def))"
.br
.ti -1c
.RI "voidpf \fBcall_zopen64\fP \fB_Z_OF\fP ((const \fBzlib_filefunc64_32_def\fP *pfilefunc, voidpf file, int mode))"
.br
.ti -1c
.RI "int \fBcall_zseek64\fP \fB_Z_OF\fP ((const \fBzlib_filefunc64_32_def\fP *pfilefunc, voidpf filestream, \fBZPOS64_T\fP offset, int origin))"
.br
.ti -1c
.RI "\fBZPOS64_T\fP \fBcall_ztell64\fP \fB_Z_OF\fP ((const \fBzlib_filefunc64_32_def\fP *pfilefunc, voidpf filestream))"
.br
.ti -1c
.RI "void \fBfill_zlib_filefunc64_32_def_from_filefunc32\fP (\fBzlib_filefunc64_32_def\fP *p_filefunc64_32, const \fBzlib_filefunc_def\fP *p_filefunc32)"
.br
.in -1c
.SH "Data Structure Documentation"
.PP 
.SH "struct zlib_filefunc_def_s"
.PP 
Definition at line 143 of file ioapi\&.h\&.
.PP
\fBData Fields:\fP
.RS 4
voidpf \fIopaque\fP 
.br
.PP
close_file_func \fIzclose_file\fP 
.br
.PP
testerror_file_func \fIzerror_file\fP 
.br
.PP
open_file_func \fIzopen_file\fP 
.br
.PP
read_file_func \fIzread_file\fP 
.br
.PP
seek_file_func \fIzseek_file\fP 
.br
.PP
tell_file_func \fIztell_file\fP 
.br
.PP
write_file_func \fIzwrite_file\fP 
.br
.PP
.RE
.PP
.SH "struct zlib_filefunc64_def_s"
.PP 
Definition at line 159 of file ioapi\&.h\&.
.PP
\fBData Fields:\fP
.RS 4
voidpf \fIopaque\fP 
.br
.PP
close_file_func \fIzclose_file\fP 
.br
.PP
testerror_file_func \fIzerror_file\fP 
.br
.PP
close_file_func \fIzfakeclose_file\fP 
.br
.PP
open64_file_func \fIzopen64_file\fP 
.br
.PP
read_file_func \fIzread_file\fP 
.br
.PP
seek64_file_func \fIzseek64_file\fP 
.br
.PP
tell64_file_func \fIztell64_file\fP 
.br
.PP
write_file_func \fIzwrite_file\fP 
.br
.PP
.RE
.PP
.SH "struct zlib_filefunc64_32_def_s"
.PP 
Definition at line 176 of file ioapi\&.h\&.
.PP
\fBData Fields:\fP
.RS 4
\fBzlib_filefunc64_def\fP \fIzfile_func64\fP 
.br
.PP
open_file_func \fIzopen32_file\fP 
.br
.PP
seek_file_func \fIzseek32_file\fP 
.br
.PP
tell_file_func \fIztell32_file\fP 
.br
.PP
.RE
.PP
.SH "Macro Definition Documentation"
.PP 
.SS "#define __USE_FILE_OFFSET64"

.PP
Definition at line 32 of file ioapi\&.h\&.
.SS "#define __USE_LARGEFILE64"

.PP
Definition at line 35 of file ioapi\&.h\&.
.SS "#define _FILE_OFFSET_BIT   64"

.PP
Definition at line 41 of file ioapi\&.h\&.
.SS "#define _LARGEFILE64_SOURCE"

.PP
Definition at line 38 of file ioapi\&.h\&.
.SS "#define OF   \fB_Z_OF\fP"

.PP
Definition at line 106 of file ioapi\&.h\&.
.SS "#define ZCALLBACK"

.PP
Definition at line 125 of file ioapi\&.h\&.
.SS "#define ZCLOSE64(filefunc, filestream)   ((*((filefunc)\&.zfile_func64\&.zclose_file))  ((filefunc)\&.zfile_func64\&.opaque,filestream))"

.PP
Definition at line 189 of file ioapi\&.h\&.
.PP
Referenced by LoadCentralDirectoryRecord(), unzClose(), unzOpenInternal(), zipClose(), and zipOpen3()\&.
.SS "#define ZERROR64(filefunc, filestream)   ((*((filefunc)\&.zfile_func64\&.zerror_file))  ((filefunc)\&.zfile_func64\&.opaque,filestream))"

.PP
Definition at line 191 of file ioapi\&.h\&.
.PP
Referenced by unz64local_getByte(), and zip64local_getByte()\&.
.SS "#define ZFAKECLOSE64(filefunc, filestream)   ((*((filefunc)\&.zfile_func64\&.zfakeclose_file))  ((filefunc)\&.zfile_func64\&.opaque,filestream))"

.PP
Definition at line 190 of file ioapi\&.h\&.
.PP
Referenced by LoadCentralDirectoryRecord(), unzClose(), unzOpenInternal(), zipClose(), and zipOpen3()\&.
.SS "#define ZLIB_FILEFUNC_MODE_CREATE   (8)"

.PP
Definition at line 118 of file ioapi\&.h\&.
.PP
Referenced by qiodevice_open_file_func(), and zipOpen3()\&.
.SS "#define ZLIB_FILEFUNC_MODE_EXISTING   (4)"

.PP
Definition at line 117 of file ioapi\&.h\&.
.PP
Referenced by qiodevice_open_file_func(), unzOpenInternal(), and zipOpen3()\&.
.SS "#define ZLIB_FILEFUNC_MODE_READ   (1)"

.PP
Definition at line 113 of file ioapi\&.h\&.
.PP
Referenced by qiodevice_open_file_func(), unzOpenInternal(), and zipOpen3()\&.
.SS "#define ZLIB_FILEFUNC_MODE_READWRITEFILTER   (3)"

.PP
Definition at line 115 of file ioapi\&.h\&.
.PP
Referenced by qiodevice_open_file_func()\&.
.SS "#define ZLIB_FILEFUNC_MODE_WRITE   (2)"

.PP
Definition at line 114 of file ioapi\&.h\&.
.PP
Referenced by zipOpen3()\&.
.SS "#define ZLIB_FILEFUNC_SEEK_CUR   (1)"

.PP
Definition at line 109 of file ioapi\&.h\&.
.PP
Referenced by qiodevice64_seek_file_func(), qiodevice_seek_file_func(), and unz64local_GetCurrentFileInfoInternal()\&.
.SS "#define ZLIB_FILEFUNC_SEEK_END   (2)"

.PP
Definition at line 110 of file ioapi\&.h\&.
.PP
Referenced by qiodevice64_seek_file_func(), qiodevice_seek_file_func(), unz64local_SearchCentralDir(), unz64local_SearchCentralDir64(), zip64local_SearchCentralDir(), and zip64local_SearchCentralDir64()\&.
.SS "#define ZLIB_FILEFUNC_SEEK_SET   (0)"

.PP
Definition at line 111 of file ioapi\&.h\&.
.PP
Referenced by LoadCentralDirectoryRecord(), qiodevice64_seek_file_func(), qiodevice_seek_file_func(), unz64local_CheckCurrentFileCoherencyHeader(), unz64local_GetCurrentFileInfoInternal(), unz64local_SearchCentralDir(), unz64local_SearchCentralDir64(), unzGetGlobalComment(), unzGetLocalExtrafield(), unzOpenInternal(), unzReadCurrentFile(), zip64local_SearchCentralDir(), zip64local_SearchCentralDir64(), and zipCloseFileInZipRaw64()\&.
.SS "#define ZOPEN64(filefunc, filename, mode)   (\fBcall_zopen64\fP((&(filefunc)),(filename),(mode)))"

.PP
Definition at line 199 of file ioapi\&.h\&.
.PP
Referenced by unzOpenInternal(), and zipOpen3()\&.
.SS "#define ZREAD64(filefunc, filestream, buf, size)   ((*((filefunc)\&.zfile_func64\&.zread_file))   ((filefunc)\&.zfile_func64\&.opaque,filestream,buf,size))"

.PP
Definition at line 185 of file ioapi\&.h\&.
.PP
Referenced by LoadCentralDirectoryRecord(), unz64local_getByte(), unz64local_GetCurrentFileInfoInternal(), unz64local_SearchCentralDir(), unz64local_SearchCentralDir64(), unzGetGlobalComment(), unzGetLocalExtrafield(), unzOpenCurrentFile3(), unzReadCurrentFile(), zip64local_getByte(), zip64local_SearchCentralDir(), and zip64local_SearchCentralDir64()\&.
.SS "#define ZSEEK64(filefunc, filestream, pos, mode)   (\fBcall_zseek64\fP((&(filefunc)),(filestream),(pos),(mode)))"

.PP
Definition at line 201 of file ioapi\&.h\&.
.PP
Referenced by LoadCentralDirectoryRecord(), unz64local_CheckCurrentFileCoherencyHeader(), unz64local_GetCurrentFileInfoInternal(), unz64local_SearchCentralDir(), unz64local_SearchCentralDir64(), unzGetGlobalComment(), unzGetLocalExtrafield(), unzOpenCurrentFile3(), unzOpenInternal(), unzReadCurrentFile(), zip64local_SearchCentralDir(), zip64local_SearchCentralDir64(), zipCloseFileInZipRaw64(), and zipOpen3()\&.
.SS "#define ZTELL64(filefunc, filestream)   (\fBcall_ztell64\fP((&(filefunc)),(filestream)))"

.PP
Definition at line 200 of file ioapi\&.h\&.
.PP
Referenced by unz64local_SearchCentralDir(), unz64local_SearchCentralDir64(), Write_LocalFileHeader(), zip64local_SearchCentralDir(), zip64local_SearchCentralDir64(), zipClose(), zipCloseFileInZipRaw64(), zipOpen3(), and zipOpenNewFileInZip4_64()\&.
.SS "#define ZWRITE64(filefunc, filestream, buf, size)   ((*((filefunc)\&.zfile_func64\&.zwrite_file))  ((filefunc)\&.zfile_func64\&.opaque,filestream,buf,size))"

.PP
Definition at line 186 of file ioapi\&.h\&.
.PP
Referenced by Write_GlobalComment(), Write_LocalFileHeader(), zip64FlushWriteBuffer(), zip64local_putValue(), zipClose(), and zipOpenNewFileInZip4_64()\&.
.SH "Typedef Documentation"
.PP 
.SS "\fBzipFile\fP ZEXPORT \fBzipOpen64\fP _Z_OF ((voidpf opaque, voidpf file, int mode))"
Addition for GDAL : END\&. 
.PP
Definition at line 132 of file ioapi\&.h\&.
.SS "typedef struct \fBzlib_filefunc64_32_def_s\fP  \fBzlib_filefunc64_32_def\fP"

.SS "typedef struct \fBzlib_filefunc64_def_s\fP  \fBzlib_filefunc64_def\fP"

.SS "typedef struct \fBzlib_filefunc_def_s\fP  \fBzlib_filefunc_def\fP"

.SS "typedef unsigned long long int \fBZPOS64_T\fP"

.PP
Definition at line 94 of file ioapi\&.h\&.
.SH "Function Documentation"
.PP 
.SS "void \fBfill_qiodevice64_filefunc\fP _Z_OF ((\fBzlib_filefunc64_def\fP *pzlib_filefunc_def))"

.SS "void \fBfill_qiodevice_filefunc\fP _Z_OF ((\fBzlib_filefunc_def\fP *pzlib_filefunc_def))"

.SS "voidpf \fBcall_zopen64\fP _Z_OF ((const \fBzlib_filefunc64_32_def\fP *pfilefunc, voidpf file, int mode))"

.SS "int \fBcall_zseek64\fP _Z_OF ((const \fBzlib_filefunc64_32_def\fP *pfilefunc, voidpf filestream, \fBZPOS64_T\fP offset, int origin))"

.SS "\fBZPOS64_T\fP \fBcall_ztell64\fP _Z_OF ((const \fBzlib_filefunc64_32_def\fP *pfilefunc, voidpf filestream))"

.SS "void fill_zlib_filefunc64_32_def_from_filefunc32 (\fBzlib_filefunc64_32_def\fP *p_filefunc64_32, const \fBzlib_filefunc_def\fP *p_filefunc32)"

.PP
Definition at line 346 of file qioapi\&.cpp\&.
.PP
References zlib_filefunc_def_s::opaque, zlib_filefunc64_def_s::opaque, zlib_filefunc_def_s::zclose_file, zlib_filefunc64_def_s::zclose_file, zlib_filefunc_def_s::zerror_file, zlib_filefunc64_def_s::zerror_file, zlib_filefunc64_def_s::zfakeclose_file, zlib_filefunc64_32_def_s::zfile_func64, zlib_filefunc64_32_def_s::zopen32_file, zlib_filefunc64_def_s::zopen64_file, zlib_filefunc_def_s::zopen_file, zlib_filefunc_def_s::zread_file, zlib_filefunc64_def_s::zread_file, zlib_filefunc64_32_def_s::zseek32_file, zlib_filefunc64_def_s::zseek64_file, zlib_filefunc_def_s::zseek_file, zlib_filefunc64_32_def_s::ztell32_file, zlib_filefunc64_def_s::ztell64_file, zlib_filefunc_def_s::ztell_file, zlib_filefunc_def_s::zwrite_file, and zlib_filefunc64_def_s::zwrite_file\&.
.PP
Referenced by unzOpen2(), and zipOpen2()\&.
.PP
.nf
347 {
348     p_filefunc64_32->zfile_func64\&.zopen64_file = NULL;
349     p_filefunc64_32->zopen32_file = p_filefunc32->zopen_file;
350     p_filefunc64_32->zfile_func64\&.zerror_file = p_filefunc32->zerror_file;
351     p_filefunc64_32->zfile_func64\&.zread_file = p_filefunc32->zread_file;
352     p_filefunc64_32->zfile_func64\&.zwrite_file = p_filefunc32->zwrite_file;
353     p_filefunc64_32->zfile_func64\&.ztell64_file = NULL;
354     p_filefunc64_32->zfile_func64\&.zseek64_file = NULL;
355     p_filefunc64_32->zfile_func64\&.zclose_file = p_filefunc32->zclose_file;
356     p_filefunc64_32->zfile_func64\&.zerror_file = p_filefunc32->zerror_file;
357     p_filefunc64_32->zfile_func64\&.opaque = p_filefunc32->opaque;
358     p_filefunc64_32->zfile_func64\&.zfakeclose_file = NULL;
359     p_filefunc64_32->zseek32_file = p_filefunc32->zseek_file;
360     p_filefunc64_32->ztell32_file = p_filefunc32->ztell_file;
361 }
.fi
.SH "Author"
.PP 
Generated automatically by Doxygen for ckb-next from the source code\&.
