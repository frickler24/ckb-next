.TH "ColorMap" 3 "Sat Jan 20 2018" "Version v0.2.8 at branch master" "ckb-next" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ColorMap \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <src/ckb/colormap\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBColorMap\fP ()"
.br
.ti -1c
.RI "\fB~ColorMap\fP ()"
.br
.ti -1c
.RI "\fBColorMap\fP (const \fBColorMap\fP &rhs)"
.br
.ti -1c
.RI "const \fBColorMap\fP & \fBoperator=\fP (const \fBColorMap\fP &rhs)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBColorMap\fP &rhs) const "
.br
.ti -1c
.RI "void \fBinit\fP (const \fBKeyMap\fP &map)"
.br
.ti -1c
.RI "void \fBclear\fP ()"
.br
.ti -1c
.RI "int \fBcount\fP () const "
.br
.ti -1c
.RI "const char *const * \fBkeyNames\fP () const "
.br
.ti -1c
.RI "QRgb * \fBcolors\fP ()"
.br
.ti -1c
.RI "const QRgb * \fBcolors\fP () const "
.br
.ti -1c
.RI "QRgb * \fBcolorForName\fP (const char *name)"
.br
.ti -1c
.RI "const QRgb * \fBcolorForName\fP (const char *name) const "
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBalloc\fP (int \fBcount\fP)"
.br
.ti -1c
.RI "void \fBdeAlloc\fP ()"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "const char ** \fB_keyNames\fP"
.br
.ti -1c
.RI "QRgb * \fB_colors\fP"
.br
.ti -1c
.RI "int \fB_count\fP"
.br
.ti -1c
.RI "int \fB_mapCount\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 15 of file colormap\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "ColorMap::ColorMap ()"

.PP
Definition at line 3 of file colormap\&.cpp\&.
.PP
.nf
3                    :
4     _keyNames(0), _colors(0), _count(0), _mapCount(0)
5 {
6 }
.fi
.SS "ColorMap::~ColorMap ()"

.PP
Definition at line 8 of file colormap\&.cpp\&.
.PP
References deAlloc()\&.
.PP
.nf
8                    {
9     deAlloc();
10 }
.fi
.SS "ColorMap::ColorMap (const \fBColorMap\fP &rhs)"

.PP
Definition at line 12 of file colormap\&.cpp\&.
.PP
.nf
12                                       :
13     _keyNames(0), _colors(0), _count(0), _mapCount(0)
14 {
15     *this = rhs;
16 }
.fi
.SH "Member Function Documentation"
.PP 
.SS "void ColorMap::alloc (intcount)\fC [private]\fP"

.PP
Definition at line 43 of file colormap\&.cpp\&.
.PP
References _colors, _count, _keyNames, _mapCount, clear(), and deAlloc()\&.
.PP
Referenced by init(), and operator=()\&.
.PP
.nf
43                                 {
44     if(newCount > _mapCount){
45         // ^ map never shrinks, only expands
46         deAlloc();
47         _mapCount = newCount;
48         _keyNames = new const char*[_mapCount];
49         _colors = new QRgb[_mapCount];
50     }
51     _count = newCount;
52     clear();
53 }
.fi
.SS "void ColorMap::clear ()"

.PP
Definition at line 61 of file colormap\&.cpp\&.
.PP
References _colors, and _count\&.
.PP
Referenced by alloc(), AnimScript::end(), and KbLight::resetIndicators()\&.
.PP
.nf
61                     {
62     memset(_colors, 0, _count * sizeof(QRgb));
63 }
.fi
.SS "QRgb * ColorMap::colorForName (const char *name)"

.PP
Definition at line 88 of file colormap\&.cpp\&.
.PP
References _colors, _count, _keyNames, and qs_strcmp()\&.
.PP
Referenced by KbLight::base(), KbLight::color(), KeyWidget::paintEvent(), AnimScript::readProcess(), KbLight::rebuildBaseMap(), and KbLight::setIndicator()\&.
.PP
.nf
88                                             {
89     if(!_keyNames)
90         return 0;
91     const char** namePtr = (const char**)bsearch(&name, _keyNames, _count, sizeof(const char*), qs_strcmp);
92     if(!namePtr)
93         return 0;
94     ptrdiff_t position = namePtr - _keyNames;
95     return _colors + position;
96 }
.fi
.SS "const QRgb * ColorMap::colorForName (const char *name) const"

.PP
Definition at line 98 of file colormap\&.cpp\&.
.PP
References _colors, _count, _keyNames, and qs_strcmp()\&.
.PP
.nf
98                                                          {
99     if(!_keyNames)
100         return 0;
101     const char** namePtr = (const char**)bsearch(&name, _keyNames, _count, sizeof(const char*), qs_strcmp);
102     if(!namePtr)
103         return 0;
104     ptrdiff_t position = namePtr - _keyNames;
105     return _colors + position;
106 }
.fi
.SS "QRgb* ColorMap::colors ()\fC [inline]\fP"

.PP
Definition at line 33 of file colormap\&.h\&.
.PP
References _colors\&.
.PP
Referenced by KbLight::base(), KbAnim::blend(), KbLight::color(), KbLight::frameUpdate(), KbLight::printRGB(), and AnimScript::readProcess()\&.
.PP
.nf
33 { return _colors; }
.fi
.SS "const QRgb* ColorMap::colors () const\fC [inline]\fP"

.PP
Definition at line 34 of file colormap\&.h\&.
.PP
References _colors\&.
.PP
.nf
34 { return _colors; }
.fi
.SS "int ColorMap::count () const\fC [inline]\fP"

.PP
Definition at line 31 of file colormap\&.h\&.
.PP
References _count\&.
.PP
Referenced by KbLight::base(), KbAnim::blend(), KbLight::color(), KbLight::frameUpdate(), KbLight::printRGB(), and AnimScript::readProcess()\&.
.PP
.nf
31 { return _count; }
.fi
.SS "void ColorMap::deAlloc ()\fC [private]\fP"

.PP
Definition at line 55 of file colormap\&.cpp\&.
.PP
References _colors, _count, _keyNames, and _mapCount\&.
.PP
Referenced by alloc(), and ~ColorMap()\&.
.PP
.nf
55                       {
56     _count = _mapCount = 0;
57     if(_keyNames) delete[] _keyNames;
58     if(_colors) delete[] _colors;
59 }
.fi
.SS "void ColorMap::init (const \fBKeyMap\fP &map)"

.PP
Definition at line 69 of file colormap\&.cpp\&.
.PP
References _count, _keyNames, alloc(), Key::hasLed, Key::name, KeyMap::positions(), and qs_strcmp()\&.
.PP
Referenced by AnimScript::init(), and KbLight::map()\&.
.PP
.nf
69                                     {
70     QList<Key> newKeys = map\&.positions();
71     // There's no point including keys that don't have LEDs, so remove them now
72     QMutableListIterator<Key> i(newKeys);
73     while(i\&.hasNext()){
74         Key key = i\&.next();
75         if(!key\&.hasLed)
76             i\&.remove();
77     }
78     // Now that we know how many keys we'll have, check memory
79     alloc(newKeys\&.count());
80     // Copy key names
81     int keyPos = 0;
82     foreach(const Key& key, newKeys)
83         _keyNames[keyPos++] = key\&.name;     // as above, it's safe to copy these since the strings are constants
84     // Sort names for quick access
85     qsort(_keyNames, _count, sizeof(const char*), qs_strcmp);
86 }
.fi
.SS "const char* const* ColorMap::keyNames () const\fC [inline]\fP"

.PP
Definition at line 32 of file colormap\&.h\&.
.PP
References _keyNames\&.
.PP
Referenced by KbLight::printRGB()\&.
.PP
.nf
32 { return _keyNames; }
.fi
.SS "const \fBColorMap\fP & ColorMap::operator= (const \fBColorMap\fP &rhs)"

.PP
Definition at line 18 of file colormap\&.cpp\&.
.PP
References _colors, _count, _keyNames, and alloc()\&.
.PP
.nf
18                                                       {
19     alloc(rhs\&._count);
20     // Copy key names and colors
21     // (Note: it's safe to copy the const char*'s because key names are constants and will never move or be deleted)
22     memcpy(_keyNames, rhs\&._keyNames, sizeof(const char*) * _count);
23     memcpy(_colors, rhs\&._colors, sizeof(QRgb) * _count);
24     return rhs;
25 }
.fi
.SS "bool ColorMap::operator== (const \fBColorMap\fP &rhs) const"

.PP
Definition at line 27 of file colormap\&.cpp\&.
.PP
References _colors, _count, _keyNames, and x\&.
.PP
.nf
27                                                   {
28     if(_count != rhs\&._count)
29         return false;
30 
31     // Compare just the pointers because key names are sorted and the strings are constants\&.
32     if(memcmp(_keyNames, rhs\&._keyNames, sizeof(const char*) * _count) != 0)
33         return false;
34 
35     for(int x = 0;x < _count;x++){
36         if(_colors[x] != rhs\&._colors[x])
37             return false;
38     }
39 
40     return true;
41 }
.fi
.SH "Field Documentation"
.PP 
.SS "QRgb* ColorMap::_colors\fC [private]\fP"

.PP
Definition at line 45 of file colormap\&.h\&.
.PP
Referenced by alloc(), clear(), colorForName(), colors(), deAlloc(), operator=(), and operator==()\&.
.SS "int ColorMap::_count\fC [private]\fP"

.PP
Definition at line 46 of file colormap\&.h\&.
.PP
Referenced by alloc(), clear(), colorForName(), count(), deAlloc(), init(), operator=(), and operator==()\&.
.SS "const char** ColorMap::_keyNames\fC [private]\fP"

.PP
Definition at line 44 of file colormap\&.h\&.
.PP
Referenced by alloc(), colorForName(), deAlloc(), init(), keyNames(), operator=(), and operator==()\&.
.SS "int ColorMap::_mapCount\fC [private]\fP"

.PP
Definition at line 46 of file colormap\&.h\&.
.PP
Referenced by alloc(), and deAlloc()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for ckb-next from the source code\&.
