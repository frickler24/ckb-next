.TH "FwUpgradeDialog" 3 "Sat Jan 20 2018" "Version v0.2.8 at branch master" "ckb-next" \" -*- nroff -*-
.ad l
.nh
.SH NAME
FwUpgradeDialog \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <src/ckb/fwupgradedialog\&.h>\fP
.PP
Inherits \fBQDialog\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBFwUpgradeDialog\fP (\fBQWidget\fP *parent, float newV, const QByteArray &fwBlob, \fBKb\fP *device)"
.br
.ti -1c
.RI "\fB~FwUpgradeDialog\fP ()"
.br
.ti -1c
.RI "int \fBexec\fP ()"
.br
.in -1c
.SS "Private Slots"

.in +1c
.ti -1c
.RI "void \fBfwUpdateProgress\fP (int \fBcurrent\fP, int total)"
.br
.ti -1c
.RI "void \fBfwUpdateFinished\fP (bool succeeded)"
.br
.ti -1c
.RI "void \fBremoveDev\fP ()"
.br
.ti -1c
.RI "void \fBon_cancelButton_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_actionButton_clicked\fP ()"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBcloseEvent\fP (QCloseEvent *event)"
.br
.ti -1c
.RI "const QString & \fBsaveBlob\fP ()"
.br
.ti -1c
.RI "void \fBcleanBlob\fP ()"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBUi::FwUpgradeDialog\fP * \fBui\fP"
.br
.ti -1c
.RI "QString \fBsavePath\fP"
.br
.ti -1c
.RI "QByteArray \fBblob\fP"
.br
.ti -1c
.RI "\fBKb\fP * \fBkb\fP"
.br
.ti -1c
.RI "QEventLoop * \fBevLoop\fP"
.br
.ti -1c
.RI "bool \fBexitSuccess\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 13 of file fwupgradedialog\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "FwUpgradeDialog::FwUpgradeDialog (\fBQWidget\fP *parent, floatnewV, const QByteArray &fwBlob, \fBKb\fP *device)"

.PP
Definition at line 32 of file fwupgradedialog\&.cpp\&.
.PP
References Ui_FwUpgradeDialog::curLabel, Ui_FwUpgradeDialog::devLabel, DIALOG_HEIGHT_MIN, DIALOG_WIDTH, Kb::firmware, fwUpdateFinished(), fwUpdateProgress(), kb, Ui_FwUpgradeDialog::newLabel, removeDev(), Ui_FwUpgradeDialog::setupUi(), ui, and Kb::usbModel\&.
.PP
.nf
32                                                                                                   :
33     QDialog(parent),
34     ui(new Ui::FwUpgradeDialog),
35     blob(fwBlob), kb(device), evLoop(0), exitSuccess(true)
36 {
37     ui->setupUi(this);
38     ui->curLabel->setText(kb->firmware);
39     ui->newLabel->setText(QString::number(newV, 'f', 2));
40     ui->devLabel->setText(kb->usbModel);
41 
42     connect(device, SIGNAL(destroyed()), this, SLOT(removeDev()));
43     connect(device, SIGNAL(fwUpdateProgress(int,int)), this, SLOT(fwUpdateProgress(int,int)));
44     connect(device, SIGNAL(fwUpdateFinished(bool)), this, SLOT(fwUpdateFinished(bool)));
45 
46     setFixedSize(DIALOG_WIDTH, DIALOG_HEIGHT_MIN);
47 }
.fi
.SS "FwUpgradeDialog::~FwUpgradeDialog ()"

.PP
Definition at line 49 of file fwupgradedialog\&.cpp\&.
.PP
References cleanBlob(), and ui\&.
.PP
.nf
49                                  {
50     cleanBlob();
51     delete ui;
52 }
.fi
.SH "Member Function Documentation"
.PP 
.SS "void FwUpgradeDialog::cleanBlob ()\fC [private]\fP"

.PP
Definition at line 78 of file fwupgradedialog\&.cpp\&.
.PP
References savePath\&.
.PP
Referenced by fwUpdateFinished(), and ~FwUpgradeDialog()\&.
.PP
.nf
78                                {
79     if(savePath\&.isEmpty())
80         return;
81     QFile(savePath)\&.remove();
82     savePath = "";
83 }
.fi
.SS "void FwUpgradeDialog::closeEvent (QCloseEvent *event)\fC [private]\fP"

.PP
Definition at line 54 of file fwupgradedialog\&.cpp\&.
.PP
.nf
54                                                   {
55     event->ignore();
56 }
.fi
.SS "int FwUpgradeDialog::exec ()"

.PP
Definition at line 108 of file fwupgradedialog\&.cpp\&.
.PP
References Ui_FwUpgradeDialog::actionButton, blob, Ui_FwUpgradeDialog::cancelButton, KbFirmware::dataForBoard(), DIALOG_HEIGHT_MAX(), DIALOG_WIDTH, evLoop, exitSuccess, Kb::features, kb, Ui_FwUpgradeDialog::newLabel, Ui_FwUpgradeDialog::progressBar, saveBlob(), Ui_FwUpgradeDialog::statusLabel, ui, and verifyFw()\&.
.PP
Referenced by KbWidget::on_fwUpdButton_clicked()\&.
.PP
.nf
108                          {
109     QString features = kb->features;
110     if(!blob\&.isEmpty()){
111         // If a blob was already specified, check its version and validity
112         float newV = verifyFw(blob, features);
113         if(newV == 0\&.f){
114             QMessageBox::warning(parentWidget(), "Error", "<center>Not a valid firmware for this device\&.</center>");
115             return QDialog::Rejected;
116         }
117         ui->newLabel->setText(QString::number(newV, 'f', 2));
118     } else {
119         // Download a new blob file
120         ui->progressBar->show();
121         ui->cancelButton->setEnabled(false);
122         ui->actionButton->setEnabled(false);
123         show();
124         // This can take a while
125         blob = KbFirmware::dataForBoard(features);
126         // Check validity
127         float newV = verifyFw(blob, features);
128         if(newV == 0\&.f){
129             hide();
130             QMessageBox::warning(parentWidget(), "Error", "<center>There was a problem with the downloaded file\&.<br />Please try again later\&.</center>");
131             return QDialog::Rejected;
132         }
133     }
134     // Save temporary file
135     if(saveBlob()\&.isEmpty()){
136         hide();
137         QMessageBox::warning(parentWidget(), "Error", "<center>Unable to save temporary file\&.</center>");
138         return QDialog::Rejected;
139     }
140     // Set up UI
141     ui->progressBar->setValue(0);
142     ui->progressBar->setMaximum(1);
143     ui->progressBar->setTextVisible(false);
144     ui->statusLabel->setText("Ready to install new firmware\&.<br /><br /><b>Disclaimer:</b> ckb-next is not endorsed by Corsair\&.<br />This is <i>unlikely</i> to cause any damage, however the developers of this software do not accept any responsibility in such an event\&.");
145     ui->cancelButton->setEnabled(true);
146     ui->actionButton->setEnabled(true);
147     setFixedSize(DIALOG_WIDTH, DIALOG_HEIGHT_MAX);
148     show();
149     // Run modal event loop
150     evLoop = new QEventLoop(this);
151     evLoop->exec();
152     delete evLoop;
153     hide();
154     return exitSuccess ? QDialog::Accepted : QDialog::Rejected;
155 }
.fi
.SS "void FwUpgradeDialog::fwUpdateFinished (boolsucceeded)\fC [private]\fP, \fC [slot]\fP"

.PP
Definition at line 171 of file fwupgradedialog\&.cpp\&.
.PP
References Ui_FwUpgradeDialog::actionButton, cleanBlob(), evLoop, Ui_FwUpgradeDialog::progressBar, quit(), Ui_FwUpgradeDialog::statusLabel, and ui\&.
.PP
Referenced by FwUpgradeDialog(), and removeDev()\&.
.PP
.nf
171                                                     {
172     cleanBlob();
173     if(succeeded)
174         ui->statusLabel->setText("Update successful!");
175     else
176         ui->statusLabel->setText("Update failed\&.");
177     ui->actionButton->setText("OK");
178     ui->actionButton->setEnabled(true);
179     ui->progressBar->setMaximum(1);
180     ui->progressBar->setValue(1);
181     // Exit after 10s
182     if(evLoop)
183         QTimer::singleShot(10000, evLoop, SLOT(quit()));
184 }
.fi
.SS "void FwUpgradeDialog::fwUpdateProgress (intcurrent, inttotal)\fC [private]\fP, \fC [slot]\fP"

.PP
Definition at line 164 of file fwupgradedialog\&.cpp\&.
.PP
References Ui_FwUpgradeDialog::progressBar, and ui\&.
.PP
Referenced by FwUpgradeDialog()\&.
.PP
.nf
164                                                             {
165     if(current > 0 && total > 0){
166         ui->progressBar->setMaximum(total);
167         ui->progressBar->setValue(current);
168     }
169 }
.fi
.SS "void FwUpgradeDialog::on_actionButton_clicked ()\fC [private]\fP, \fC [slot]\fP"

.PP
Definition at line 192 of file fwupgradedialog\&.cpp\&.
.PP
References Ui_FwUpgradeDialog::actionButton, Ui_FwUpgradeDialog::cancelButton, DIALOG_HEIGHT_MIN, DIALOG_WIDTH, evLoop, Kb::fwUpdate(), kb, Ui_FwUpgradeDialog::progressBar, savePath, Ui_FwUpgradeDialog::statusLabel, and ui\&.
.PP
.nf
192                                              {
193     if(!savePath\&.isEmpty() && kb){
194         // Start upgrade
195         setFixedSize(DIALOG_WIDTH, DIALOG_HEIGHT_MIN);
196         ui->progressBar->show();
197         ui->progressBar->setValue(0);
198         ui->progressBar->setMaximum(0);
199         ui->progressBar->setTextVisible(true);
200         ui->cancelButton->hide();
201         ui->actionButton->setEnabled(false);
202         ui->actionButton->setText("Please wait");
203         ui->statusLabel->setText("Installing firmware\&.\&.\&.");
204         kb->fwUpdate(savePath);
205     } else {
206         // Finished, close dialog\&.
207         if(evLoop)
208             evLoop->quit();
209     }
210 }
.fi
.SS "void FwUpgradeDialog::on_cancelButton_clicked ()\fC [private]\fP, \fC [slot]\fP"

.PP
Definition at line 186 of file fwupgradedialog\&.cpp\&.
.PP
References evLoop, and exitSuccess\&.
.PP
.nf
186                                              {
187     exitSuccess = false;
188     if(evLoop)
189         evLoop->quit();
190 }
.fi
.SS "void FwUpgradeDialog::removeDev ()\fC [private]\fP, \fC [slot]\fP"

.PP
Definition at line 157 of file fwupgradedialog\&.cpp\&.
.PP
References fwUpdateFinished(), kb, and savePath\&.
.PP
Referenced by FwUpgradeDialog()\&.
.PP
.nf
157                                {
158     kb = 0;
159     // Assume success if upgrade in progress
160     if(!savePath\&.isEmpty())
161         fwUpdateFinished(true);
162 }
.fi
.SS "const QString & FwUpgradeDialog::saveBlob ()\fC [private]\fP"

.PP
Definition at line 58 of file fwupgradedialog\&.cpp\&.
.PP
References blob, and savePath\&.
.PP
Referenced by exec()\&.
.PP
.nf
58                                         {
59     if(!savePath\&.isEmpty())
60         return savePath;
61     QDir tmp = QDir::temp();
62     qint64 pid = QCoreApplication::applicationPid();
63     QString path = tmp\&.absoluteFilePath(QString("ckb-%1-fwblob\&.bin")\&.arg(pid));
64     QFile output(path);
65     if(!output\&.open(QIODevice::WriteOnly)){
66         return savePath;
67     }
68     if(!output\&.write(blob)){
69         output\&.close();
70         tmp\&.remove(path);
71         return savePath;
72     }
73     output\&.close();
74     savePath = path;
75     return savePath;
76 }
.fi
.SH "Field Documentation"
.PP 
.SS "QByteArray FwUpgradeDialog::blob\fC [private]\fP"

.PP
Definition at line 41 of file fwupgradedialog\&.h\&.
.PP
Referenced by exec(), and saveBlob()\&.
.SS "QEventLoop* FwUpgradeDialog::evLoop\fC [private]\fP"

.PP
Definition at line 45 of file fwupgradedialog\&.h\&.
.PP
Referenced by exec(), fwUpdateFinished(), on_actionButton_clicked(), and on_cancelButton_clicked()\&.
.SS "bool FwUpgradeDialog::exitSuccess\fC [private]\fP"

.PP
Definition at line 46 of file fwupgradedialog\&.h\&.
.PP
Referenced by exec(), and on_cancelButton_clicked()\&.
.SS "\fBKb\fP* FwUpgradeDialog::kb\fC [private]\fP"

.PP
Definition at line 42 of file fwupgradedialog\&.h\&.
.PP
Referenced by exec(), FwUpgradeDialog(), on_actionButton_clicked(), and removeDev()\&.
.SS "QString FwUpgradeDialog::savePath\fC [private]\fP"

.PP
Definition at line 37 of file fwupgradedialog\&.h\&.
.PP
Referenced by cleanBlob(), on_actionButton_clicked(), removeDev(), and saveBlob()\&.
.SS "\fBUi::FwUpgradeDialog\fP* FwUpgradeDialog::ui\fC [private]\fP"

.PP
Definition at line 32 of file fwupgradedialog\&.h\&.
.PP
Referenced by exec(), fwUpdateFinished(), fwUpdateProgress(), FwUpgradeDialog(), on_actionButton_clicked(), and ~FwUpgradeDialog()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for ckb-next from the source code\&.
