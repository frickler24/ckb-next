.TH "FwUpgradeDialog" 3 "Tue May 16 2017" "Version beta-v0.2.7 at branch testing" "ckb-next" \" -*- nroff -*-
.ad l
.nh
.SH NAME
FwUpgradeDialog \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <src/ckb/fwupgradedialog\&.h>\fP
.PP
Inherits \fBQDialog\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBFwUpgradeDialog\fP (\fBQWidget\fP *parent, float newV, const QByteArray &fwBlob, \fBKb\fP *device)"
.br
.ti -1c
.RI "\fB~FwUpgradeDialog\fP ()"
.br
.ti -1c
.RI "int \fBexec\fP ()"
.br
.in -1c
.SS "Private Slots"

.in +1c
.ti -1c
.RI "void \fBfwUpdateProgress\fP (int \fBcurrent\fP, int total)"
.br
.ti -1c
.RI "void \fBfwUpdateFinished\fP (bool succeeded)"
.br
.ti -1c
.RI "void \fBremoveDev\fP ()"
.br
.ti -1c
.RI "void \fBon_cancelButton_clicked\fP ()"
.br
.ti -1c
.RI "void \fBon_actionButton_clicked\fP ()"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "void \fBcloseEvent\fP (QCloseEvent *event)"
.br
.ti -1c
.RI "const QString & \fBsaveBlob\fP ()"
.br
.ti -1c
.RI "void \fBcleanBlob\fP ()"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBUi::FwUpgradeDialog\fP * \fBui\fP"
.br
.ti -1c
.RI "QString \fBsavePath\fP"
.br
.ti -1c
.RI "QByteArray \fBblob\fP"
.br
.ti -1c
.RI "\fBKb\fP * \fBkb\fP"
.br
.ti -1c
.RI "QEventLoop * \fBevLoop\fP"
.br
.ti -1c
.RI "bool \fBexitSuccess\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 13 of file fwupgradedialog\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "FwUpgradeDialog::FwUpgradeDialog (\fBQWidget\fP *parent, floatnewV, const QByteArray &fwBlob, \fBKb\fP *device)"

.PP
Definition at line 31 of file fwupgradedialog\&.cpp\&.
.PP
References Ui_FwUpgradeDialog::curLabel, Ui_FwUpgradeDialog::devLabel, DIALOG_HEIGHT_MIN, DIALOG_WIDTH, Kb::firmware, fwUpdateFinished(), fwUpdateProgress(), kb, Ui_FwUpgradeDialog::newLabel, removeDev(), Ui_FwUpgradeDialog::setupUi(), ui, and Kb::usbModel\&.
.PP
.nf
31                                                                                                   :
32     QDialog(parent),
33     ui(new Ui::FwUpgradeDialog),
34     blob(fwBlob), kb(device), evLoop(0), exitSuccess(true)
35 {
36     ui->setupUi(this);
37     ui->curLabel->setText(kb->firmware);
38     ui->newLabel->setText(QString::number(newV, 'f', 2));
39     ui->devLabel->setText(kb->usbModel);
40 
41     connect(device, SIGNAL(destroyed()), this, SLOT(removeDev()));
42     connect(device, SIGNAL(fwUpdateProgress(int,int)), this, SLOT(fwUpdateProgress(int,int)));
43     connect(device, SIGNAL(fwUpdateFinished(bool)), this, SLOT(fwUpdateFinished(bool)));
44 
45     setFixedSize(DIALOG_WIDTH, DIALOG_HEIGHT_MIN);
46 }
.fi
.SS "FwUpgradeDialog::~FwUpgradeDialog ()"

.PP
Definition at line 48 of file fwupgradedialog\&.cpp\&.
.PP
References cleanBlob(), and ui\&.
.PP
.nf
48                                  {
49     cleanBlob();
50     delete ui;
51 }
.fi
.SH "Member Function Documentation"
.PP 
.SS "void FwUpgradeDialog::cleanBlob ()\fC [private]\fP"

.PP
Definition at line 77 of file fwupgradedialog\&.cpp\&.
.PP
References savePath\&.
.PP
Referenced by fwUpdateFinished(), and ~FwUpgradeDialog()\&.
.PP
.nf
77                                {
78     if(savePath\&.isEmpty())
79         return;
80     QFile(savePath)\&.remove();
81     savePath = "";
82 }
.fi
.SS "void FwUpgradeDialog::closeEvent (QCloseEvent *event)\fC [private]\fP"

.PP
Definition at line 53 of file fwupgradedialog\&.cpp\&.
.PP
.nf
53                                                   {
54     event->ignore();
55 }
.fi
.SS "int FwUpgradeDialog::exec ()"

.PP
Definition at line 107 of file fwupgradedialog\&.cpp\&.
.PP
References Ui_FwUpgradeDialog::actionButton, blob, Ui_FwUpgradeDialog::cancelButton, KbFirmware::dataForBoard(), DIALOG_HEIGHT_MAX(), DIALOG_WIDTH, evLoop, exitSuccess, Kb::features, kb, Ui_FwUpgradeDialog::newLabel, Ui_FwUpgradeDialog::progressBar, saveBlob(), Ui_FwUpgradeDialog::statusLabel, ui, and verifyFw()\&.
.PP
Referenced by KbWidget::on_fwUpdButton_clicked()\&.
.PP
.nf
107                          {
108     QString features = kb->features;
109     if(!blob\&.isEmpty()){
110         // If a blob was already specified, check its version and validity
111         float newV = verifyFw(blob, features);
112         if(newV == 0\&.f){
113             QMessageBox::warning(parentWidget(), "Error", "<center>Not a valid firmware for this device\&.</center>");
114             return QDialog::Rejected;
115         }
116         ui->newLabel->setText(QString::number(newV, 'f', 2));
117     } else {
118         // Download a new blob file
119         ui->progressBar->show();
120         ui->cancelButton->setEnabled(false);
121         ui->actionButton->setEnabled(false);
122         show();
123         // This can take a while
124         blob = KbFirmware::dataForBoard(features);
125         // Check validity
126         float newV = verifyFw(blob, features);
127         if(newV == 0\&.f){
128             hide();
129             QMessageBox::warning(parentWidget(), "Error", "<center>There was a problem with the downloaded file\&.<br />Please try again later\&.</center>");
130             return QDialog::Rejected;
131         }
132     }
133     // Save temporary file
134     if(saveBlob()\&.isEmpty()){
135         hide();
136         QMessageBox::warning(parentWidget(), "Error", "<center>Unable to save temporary file\&.</center>");
137         return QDialog::Rejected;
138     }
139     // Set up UI
140     ui->progressBar->setValue(0);
141     ui->progressBar->setMaximum(1);
142     ui->progressBar->setTextVisible(false);
143     ui->statusLabel->setText("Ready to install new firmware\&.<br /><br /><b>Disclaimer:</b> ckb is not endorsed by Corsair\&. This is <i>unlikely</i> to brick your device, but I accept no responsibility if it does\&. If you're paranoid, update from Windows\&.");
144     ui->cancelButton->setEnabled(true);
145     ui->actionButton->setEnabled(true);
146     setFixedSize(DIALOG_WIDTH, DIALOG_HEIGHT_MAX);
147     show();
148     // Run modal event loop
149     evLoop = new QEventLoop(this);
150     evLoop->exec();
151     delete evLoop;
152     hide();
153     return exitSuccess ? QDialog::Accepted : QDialog::Rejected;
154 }
.fi
.SS "void FwUpgradeDialog::fwUpdateFinished (boolsucceeded)\fC [private]\fP, \fC [slot]\fP"

.PP
Definition at line 170 of file fwupgradedialog\&.cpp\&.
.PP
References Ui_FwUpgradeDialog::actionButton, cleanBlob(), evLoop, Ui_FwUpgradeDialog::progressBar, quit(), Ui_FwUpgradeDialog::statusLabel, and ui\&.
.PP
Referenced by FwUpgradeDialog(), and removeDev()\&.
.PP
.nf
170                                                     {
171     cleanBlob();
172     if(succeeded)
173         ui->statusLabel->setText("Update successful!");
174     else
175         ui->statusLabel->setText("Update failed\&.");
176     ui->actionButton->setText("OK");
177     ui->actionButton->setEnabled(true);
178     ui->progressBar->setMaximum(1);
179     ui->progressBar->setValue(1);
180     // Exit after 10s
181     if(evLoop)
182         QTimer::singleShot(10000, evLoop, SLOT(quit()));
183 }
.fi
.SS "void FwUpgradeDialog::fwUpdateProgress (intcurrent, inttotal)\fC [private]\fP, \fC [slot]\fP"

.PP
Definition at line 163 of file fwupgradedialog\&.cpp\&.
.PP
References Ui_FwUpgradeDialog::progressBar, and ui\&.
.PP
Referenced by FwUpgradeDialog()\&.
.PP
.nf
163                                                             {
164     if(current > 0 && total > 0){
165         ui->progressBar->setMaximum(total);
166         ui->progressBar->setValue(current);
167     }
168 }
.fi
.SS "void FwUpgradeDialog::on_actionButton_clicked ()\fC [private]\fP, \fC [slot]\fP"

.PP
Definition at line 191 of file fwupgradedialog\&.cpp\&.
.PP
References Ui_FwUpgradeDialog::actionButton, Ui_FwUpgradeDialog::cancelButton, DIALOG_HEIGHT_MIN, DIALOG_WIDTH, evLoop, Kb::fwUpdate(), kb, Ui_FwUpgradeDialog::progressBar, savePath, Ui_FwUpgradeDialog::statusLabel, and ui\&.
.PP
.nf
191                                              {
192     if(!savePath\&.isEmpty() && kb){
193         // Start upgrade
194         setFixedSize(DIALOG_WIDTH, DIALOG_HEIGHT_MIN);
195         ui->progressBar->show();
196         ui->progressBar->setValue(0);
197         ui->progressBar->setMaximum(0);
198         ui->progressBar->setTextVisible(true);
199         ui->cancelButton->hide();
200         ui->actionButton->setEnabled(false);
201         ui->actionButton->setText("Please wait");
202         ui->statusLabel->setText("Installing firmware\&.\&.\&.");
203         kb->fwUpdate(savePath);
204     } else {
205         // Finished, close dialog\&.
206         if(evLoop)
207             evLoop->quit();
208     }
209 }
.fi
.SS "void FwUpgradeDialog::on_cancelButton_clicked ()\fC [private]\fP, \fC [slot]\fP"

.PP
Definition at line 185 of file fwupgradedialog\&.cpp\&.
.PP
References evLoop, and exitSuccess\&.
.PP
.nf
185                                              {
186     exitSuccess = false;
187     if(evLoop)
188         evLoop->quit();
189 }
.fi
.SS "void FwUpgradeDialog::removeDev ()\fC [private]\fP, \fC [slot]\fP"

.PP
Definition at line 156 of file fwupgradedialog\&.cpp\&.
.PP
References fwUpdateFinished(), kb, and savePath\&.
.PP
Referenced by FwUpgradeDialog()\&.
.PP
.nf
156                                {
157     kb = 0;
158     // Assume success if upgrade in progress
159     if(!savePath\&.isEmpty())
160         fwUpdateFinished(true);
161 }
.fi
.SS "const QString & FwUpgradeDialog::saveBlob ()\fC [private]\fP"

.PP
Definition at line 57 of file fwupgradedialog\&.cpp\&.
.PP
References blob, and savePath\&.
.PP
Referenced by exec()\&.
.PP
.nf
57                                         {
58     if(!savePath\&.isEmpty())
59         return savePath;
60     QDir tmp = QDir::temp();
61     qint64 pid = QCoreApplication::applicationPid();
62     QString path = tmp\&.absoluteFilePath(QString("ckb-%1-fwblob\&.bin")\&.arg(pid));
63     QFile output(path);
64     if(!output\&.open(QIODevice::WriteOnly)){
65         return savePath;
66     }
67     if(!output\&.write(blob)){
68         output\&.close();
69         tmp\&.remove(path);
70         return savePath;
71     }
72     output\&.close();
73     savePath = path;
74     return savePath;
75 }
.fi
.SH "Field Documentation"
.PP 
.SS "QByteArray FwUpgradeDialog::blob\fC [private]\fP"

.PP
Definition at line 41 of file fwupgradedialog\&.h\&.
.PP
Referenced by exec(), and saveBlob()\&.
.SS "QEventLoop* FwUpgradeDialog::evLoop\fC [private]\fP"

.PP
Definition at line 45 of file fwupgradedialog\&.h\&.
.PP
Referenced by exec(), fwUpdateFinished(), on_actionButton_clicked(), and on_cancelButton_clicked()\&.
.SS "bool FwUpgradeDialog::exitSuccess\fC [private]\fP"

.PP
Definition at line 46 of file fwupgradedialog\&.h\&.
.PP
Referenced by exec(), and on_cancelButton_clicked()\&.
.SS "\fBKb\fP* FwUpgradeDialog::kb\fC [private]\fP"

.PP
Definition at line 42 of file fwupgradedialog\&.h\&.
.PP
Referenced by exec(), FwUpgradeDialog(), on_actionButton_clicked(), and removeDev()\&.
.SS "QString FwUpgradeDialog::savePath\fC [private]\fP"

.PP
Definition at line 37 of file fwupgradedialog\&.h\&.
.PP
Referenced by cleanBlob(), on_actionButton_clicked(), removeDev(), and saveBlob()\&.
.SS "\fBUi::FwUpgradeDialog\fP* FwUpgradeDialog::ui\fC [private]\fP"

.PP
Definition at line 32 of file fwupgradedialog\&.h\&.
.PP
Referenced by exec(), fwUpdateFinished(), fwUpdateProgress(), FwUpgradeDialog(), on_actionButton_clicked(), and ~FwUpgradeDialog()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for ckb-next from the source code\&.
